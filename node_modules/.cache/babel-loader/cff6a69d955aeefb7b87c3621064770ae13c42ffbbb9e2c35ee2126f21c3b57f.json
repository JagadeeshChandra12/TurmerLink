{"ast":null,"code":"import _objectSpread from\"C:/Turmerik Bits/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{dbHelpers}from'../config/supabase';import{jsx as _jsx}from\"react/jsx-runtime\";const SubmissionContext=/*#__PURE__*/createContext();export const useSubmissions=()=>{const context=useContext(SubmissionContext);if(!context){throw new Error('useSubmissions must be used within a SubmissionProvider');}return context;};export const SubmissionProvider=_ref=>{let{children}=_ref;const[submissions,setSubmissions]=useState([]);// Load submissions from Supabase on mount\nuseEffect(()=>{loadSubmissions();},[]);const loadSubmissions=async()=>{try{const{data,error}=await dbHelpers.getAllSubmissions();if(data&&!error){// Transform Supabase data to our format\nconst transformedData=data.map(item=>({id:item.id.toString(),farmerId:item.farmer_id,farmerName:item.farmer_name,farmerPhone:item.farmer_phone,quantity:item.quantity,quality:item.quality,price:item.price,location:item.location,submissionDate:item.submission_date,status:item.status,governmentResponse:item.government_response,totalValue:item.total_value,description:item.description}));setSubmissions(transformedData);}else{// Fallback to demo data\nsetSubmissions([{id:'SUB001',farmerId:'FARM001',farmerName:'రామయ్య',farmerPhone:'+91 9876543210',quantity:5,quality:'Grade A',price:8500,location:'నిజామాబాద్',submissionDate:'2024-01-20',status:'approved',governmentResponse:'2024-01-21',totalValue:42500,description:'ఉత్తమ నాణ్యత టర్మరిక్'},{id:'SUB002',farmerId:'FARM002',farmerName:'లక్ష్మయ్య',farmerPhone:'+91 9876543211',quantity:3,quality:'Export Grade',price:9200,location:'కరీంనగర్',submissionDate:'2024-01-19',status:'pending',governmentResponse:null,totalValue:27600,description:'ఎగుమతి నాణ్యత టర్మరిక్'},{id:'SUB003',farmerId:'FARM003',farmerName:'వెంకటేశ్వర్లు',farmerPhone:'+91 9876543212',quantity:7,quality:'Grade B',price:7800,location:'అదిలాబాద్',submissionDate:'2024-01-18',status:'rejected',governmentResponse:'2024-01-19',totalValue:54600,description:'సాధారణ నాణ్యత టర్మరిక్'}]);}}catch(error){console.error('❌ Failed to load submissions:',error);}};// Watch for changes to reload\nuseEffect(()=>{const interval=setInterval(()=>{loadSubmissions();},5000);// Refresh every 5 seconds\nreturn()=>clearInterval(interval);},[]);const addSubmission=async submission=>{const newSubmission=_objectSpread(_objectSpread({id:\"SUB\".concat(Date.now()),submissionDate:new Date().toISOString().split('T')[0]},submission),{},{status:'pending',governmentResponse:null});// Add to local state\nsetSubmissions(prev=>[newSubmission,...prev]);// Sync to government portal via Supabase\ntry{await dbHelpers.createSubmission({farmer_id:submission.farmerId,farmer_name:submission.farmerName,farmer_phone:submission.farmerPhone,product:'Turmeric',quantity:submission.quantity,quality:submission.quality,price:submission.price,location:submission.location,status:'pending',total_value:submission.totalValue||submission.quantity*submission.price,description:submission.description,submission_date:newSubmission.submissionDate});console.log('✅ Sales submitted to government portal successfully!');}catch(error){console.error('❌ Failed to sync with government portal:',error);}return newSubmission;};const updateSubmissionStatus=async(submissionId,newStatus)=>{// Update local state\nsetSubmissions(prev=>prev.map(sub=>sub.id===submissionId?_objectSpread(_objectSpread({},sub),{},{status:newStatus,governmentResponse:new Date().toISOString().split('T')[0]}):sub));// Sync status update to government portal via Supabase\ntry{const govResponse=new Date().toISOString().split('T')[0];await dbHelpers.updateSubmissionStatus(submissionId,newStatus,govResponse);console.log(\"\\u2705 Status updated to \".concat(newStatus,\" in government portal!\"));}catch(error){console.error('❌ Failed to update government portal:',error);}};const getFarmerSubmissions=farmerId=>{return submissions.filter(sub=>sub.farmerId===farmerId);};const getAllSubmissions=()=>{return submissions;};const getPendingSubmissions=()=>{return submissions.filter(sub=>sub.status==='pending');};const getApprovedSubmissions=()=>{return submissions.filter(sub=>sub.status==='approved');};const getRejectedSubmissions=()=>{return submissions.filter(sub=>sub.status==='rejected');};const value={submissions,addSubmission,updateSubmissionStatus,getFarmerSubmissions,getAllSubmissions,getPendingSubmissions,getApprovedSubmissions,getRejectedSubmissions};return/*#__PURE__*/_jsx(SubmissionContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","dbHelpers","jsx","_jsx","SubmissionContext","useSubmissions","context","Error","SubmissionProvider","_ref","children","submissions","setSubmissions","loadSubmissions","data","error","getAllSubmissions","transformedData","map","item","id","toString","farmerId","farmer_id","farmerName","farmer_name","farmerPhone","farmer_phone","quantity","quality","price","location","submissionDate","submission_date","status","governmentResponse","government_response","totalValue","total_value","description","console","interval","setInterval","clearInterval","addSubmission","submission","newSubmission","_objectSpread","concat","Date","now","toISOString","split","prev","createSubmission","product","log","updateSubmissionStatus","submissionId","newStatus","sub","govResponse","getFarmerSubmissions","filter","getPendingSubmissions","getApprovedSubmissions","getRejectedSubmissions","value","Provider"],"sources":["C:/Turmerik Bits/src/contexts/SubmissionContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { dbHelpers } from '../config/supabase';\r\n\r\nconst SubmissionContext = createContext();\r\n\r\nexport const useSubmissions = () => {\r\n  const context = useContext(SubmissionContext);\r\n  if (!context) {\r\n    throw new Error('useSubmissions must be used within a SubmissionProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SubmissionProvider = ({ children }) => {\r\n  const [submissions, setSubmissions] = useState([]);\r\n  \r\n  // Load submissions from Supabase on mount\r\n  useEffect(() => {\r\n    loadSubmissions();\r\n  }, []);\r\n  \r\n  const loadSubmissions = async () => {\r\n    try {\r\n      const { data, error } = await dbHelpers.getAllSubmissions();\r\n      if (data && !error) {\r\n        // Transform Supabase data to our format\r\n        const transformedData = data.map(item => ({\r\n          id: item.id.toString(),\r\n          farmerId: item.farmer_id,\r\n          farmerName: item.farmer_name,\r\n          farmerPhone: item.farmer_phone,\r\n          quantity: item.quantity,\r\n          quality: item.quality,\r\n          price: item.price,\r\n          location: item.location,\r\n          submissionDate: item.submission_date,\r\n          status: item.status,\r\n          governmentResponse: item.government_response,\r\n          totalValue: item.total_value,\r\n          description: item.description\r\n        }));\r\n        setSubmissions(transformedData);\r\n      } else {\r\n        // Fallback to demo data\r\n        setSubmissions([\r\n    {\r\n      id: 'SUB001',\r\n      farmerId: 'FARM001',\r\n      farmerName: 'రామయ్య',\r\n      farmerPhone: '+91 9876543210',\r\n      quantity: 5,\r\n      quality: 'Grade A',\r\n      price: 8500,\r\n      location: 'నిజామాబాద్',\r\n      submissionDate: '2024-01-20',\r\n      status: 'approved',\r\n      governmentResponse: '2024-01-21',\r\n      totalValue: 42500,\r\n      description: 'ఉత్తమ నాణ్యత టర్మరిక్'\r\n    },\r\n    {\r\n      id: 'SUB002',\r\n      farmerId: 'FARM002',\r\n      farmerName: 'లక్ష్మయ్య',\r\n      farmerPhone: '+91 9876543211',\r\n      quantity: 3,\r\n      quality: 'Export Grade',\r\n      price: 9200,\r\n      location: 'కరీంనగర్',\r\n      submissionDate: '2024-01-19',\r\n      status: 'pending',\r\n      governmentResponse: null,\r\n      totalValue: 27600,\r\n      description: 'ఎగుమతి నాణ్యత టర్మరిక్'\r\n    },\r\n    {\r\n      id: 'SUB003',\r\n      farmerId: 'FARM003',\r\n      farmerName: 'వెంకటేశ్వర్లు',\r\n      farmerPhone: '+91 9876543212',\r\n      quantity: 7,\r\n      quality: 'Grade B',\r\n      price: 7800,\r\n      location: 'అదిలాబాద్',\r\n      submissionDate: '2024-01-18',\r\n      status: 'rejected',\r\n      governmentResponse: '2024-01-19',\r\n      totalValue: 54600,\r\n      description: 'సాధారణ నాణ్యత టర్మరిక్'\r\n    }\r\n  ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Failed to load submissions:', error);\r\n    }\r\n  };\r\n  \r\n  // Watch for changes to reload\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      loadSubmissions();\r\n    }, 5000); // Refresh every 5 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const addSubmission = async (submission) => {\r\n    const newSubmission = {\r\n      id: `SUB${Date.now()}`,\r\n      submissionDate: new Date().toISOString().split('T')[0],\r\n      ...submission,\r\n      status: 'pending',\r\n      governmentResponse: null\r\n    };\r\n    \r\n    // Add to local state\r\n    setSubmissions(prev => [newSubmission, ...prev]);\r\n    \r\n    // Sync to government portal via Supabase\r\n    try {\r\n      await dbHelpers.createSubmission({\r\n        farmer_id: submission.farmerId,\r\n        farmer_name: submission.farmerName,\r\n        farmer_phone: submission.farmerPhone,\r\n        product: 'Turmeric',\r\n        quantity: submission.quantity,\r\n        quality: submission.quality,\r\n        price: submission.price,\r\n        location: submission.location,\r\n        status: 'pending',\r\n        total_value: submission.totalValue || (submission.quantity * submission.price),\r\n        description: submission.description,\r\n        submission_date: newSubmission.submissionDate\r\n      });\r\n      console.log('✅ Sales submitted to government portal successfully!');\r\n    } catch (error) {\r\n      console.error('❌ Failed to sync with government portal:', error);\r\n    }\r\n    \r\n    return newSubmission;\r\n  };\r\n\r\n  const updateSubmissionStatus = async (submissionId, newStatus) => {\r\n    // Update local state\r\n    setSubmissions(prev => \r\n      prev.map(sub => \r\n        sub.id === submissionId \r\n          ? { \r\n              ...sub, \r\n              status: newStatus,\r\n              governmentResponse: new Date().toISOString().split('T')[0]\r\n            }\r\n          : sub\r\n      )\r\n    );\r\n    \r\n    // Sync status update to government portal via Supabase\r\n    try {\r\n      const govResponse = new Date().toISOString().split('T')[0];\r\n      await dbHelpers.updateSubmissionStatus(submissionId, newStatus, govResponse);\r\n      console.log(`✅ Status updated to ${newStatus} in government portal!`);\r\n    } catch (error) {\r\n      console.error('❌ Failed to update government portal:', error);\r\n    }\r\n  };\r\n\r\n  const getFarmerSubmissions = (farmerId) => {\r\n    return submissions.filter(sub => sub.farmerId === farmerId);\r\n  };\r\n\r\n  const getAllSubmissions = () => {\r\n    return submissions;\r\n  };\r\n\r\n  const getPendingSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'pending');\r\n  };\r\n\r\n  const getApprovedSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'approved');\r\n  };\r\n\r\n  const getRejectedSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'rejected');\r\n  };\r\n\r\n  const value = {\r\n    submissions,\r\n    addSubmission,\r\n    updateSubmissionStatus,\r\n    getFarmerSubmissions,\r\n    getAllSubmissions,\r\n    getPendingSubmissions,\r\n    getApprovedSubmissions,\r\n    getRejectedSubmissions\r\n  };\r\n\r\n  return (\r\n    <SubmissionContext.Provider value={value}>\r\n      {children}\r\n    </SubmissionContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}