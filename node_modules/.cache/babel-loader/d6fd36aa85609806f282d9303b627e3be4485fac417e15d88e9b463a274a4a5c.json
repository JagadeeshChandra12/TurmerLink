{"ast":null,"code":"var _jsxFileName = \"C:\\\\Turmerik Bits\\\\src\\\\components\\\\Test\\\\ConnectionTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { supabase } from '../../config/supabase';\nimport { testSupabaseConfig } from '../../utils/testSupabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionTest = () => {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState('Testing...');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Test configuration first\n    testSupabaseConfig();\n    testConnection();\n  }, []);\n  const testConnection = async () => {\n    try {\n      // Test basic connection\n      const {\n        data,\n        error\n      } = await supabase.from('users').select('count(*)').limit(1);\n      if (error) {\n        setConnectionStatus('❌ Connection Failed');\n        setError(error.message);\n      } else {\n        setConnectionStatus('✅ Connection Successful');\n        setError(null);\n      }\n    } catch (err) {\n      setConnectionStatus('❌ Connection Failed');\n      setError(err.message);\n    }\n  };\n  const testInsert = async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('users').insert([{\n        phone_number: '9999999999',\n        name: 'Test User',\n        role: 'farmer'\n      }]).select();\n      if (error) {\n        alert('Insert failed: ' + error.message);\n      } else {\n        alert('Insert successful!');\n      }\n    } catch (err) {\n      alert('Insert error: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-white rounded-lg shadow-lg max-w-md mx-auto mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Supabase Connection Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium\",\n        children: [\"Status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-sm mt-2\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testConnection,\n        className: \"w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\",\n        children: \"Test Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testInsert,\n        className: \"w-full bg-green-600 text-white py-2 px-4 rounded hover:bg-green-700\",\n        children: \"Test Insert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-sm text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 12\n        }, this), \" https://fnwmvnewzirxagcyxwid.supabase.co\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 12\n        }, this), \" eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionTest, \"ZKARA3CfR/MiPiQsPLvXlmgdaPE=\");\n_c = ConnectionTest;\nexport default ConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"ConnectionTest\");","map":{"version":3,"names":["React","useState","useEffect","supabase","testSupabaseConfig","jsxDEV","_jsxDEV","ConnectionTest","_s","connectionStatus","setConnectionStatus","error","setError","testConnection","data","from","select","limit","message","err","testInsert","insert","phone_number","name","role","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Turmerik Bits/src/components/Test/ConnectionTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from '../../config/supabase';\r\nimport { testSupabaseConfig } from '../../utils/testSupabase';\r\n\r\nconst ConnectionTest = () => {\r\n  const [connectionStatus, setConnectionStatus] = useState('Testing...');\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Test configuration first\r\n    testSupabaseConfig();\r\n    testConnection();\r\n  }, []);\r\n\r\n  const testConnection = async () => {\r\n    try {\r\n      // Test basic connection\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .select('count(*)')\r\n        .limit(1);\r\n\r\n      if (error) {\r\n        setConnectionStatus('❌ Connection Failed');\r\n        setError(error.message);\r\n      } else {\r\n        setConnectionStatus('✅ Connection Successful');\r\n        setError(null);\r\n      }\r\n    } catch (err) {\r\n      setConnectionStatus('❌ Connection Failed');\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const testInsert = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('users')\r\n        .insert([{\r\n          phone_number: '9999999999',\r\n          name: 'Test User',\r\n          role: 'farmer'\r\n        }])\r\n        .select();\r\n\r\n      if (error) {\r\n        alert('Insert failed: ' + error.message);\r\n      } else {\r\n        alert('Insert successful!');\r\n      }\r\n    } catch (err) {\r\n      alert('Insert error: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white rounded-lg shadow-lg max-w-md mx-auto mt-8\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Supabase Connection Test</h2>\r\n      \r\n      <div className=\"mb-4\">\r\n        <p className=\"font-medium\">Status: {connectionStatus}</p>\r\n        {error && (\r\n          <p className=\"text-red-600 text-sm mt-2\">Error: {error}</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <button\r\n          onClick={testConnection}\r\n          className=\"w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\"\r\n        >\r\n          Test Connection\r\n        </button>\r\n        \r\n        <button\r\n          onClick={testInsert}\r\n          className=\"w-full bg-green-600 text-white py-2 px-4 rounded hover:bg-green-700\"\r\n        >\r\n          Test Insert\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"mt-4 text-sm text-gray-600\">\r\n        <p><strong>URL:</strong> https://fnwmvnewzirxagcyxwid.supabase.co</p>\r\n        <p><strong>Key:</strong> eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionTest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}