{"ast":null,"code":"import _objectSpread from\"C:/Turmerik Bits/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{dbHelpers}from'../config/supabase';import{jsx as _jsx}from\"react/jsx-runtime\";const SubmissionContext=/*#__PURE__*/createContext();export const useSubmissions=()=>{const context=useContext(SubmissionContext);if(!context){throw new Error('useSubmissions must be used within a SubmissionProvider');}return context;};export const SubmissionProvider=_ref=>{let{children}=_ref;const[submissions,setSubmissions]=useState([]);// Load submissions from localStorage on mount\nuseEffect(()=>{loadSubmissions();},[]);const loadSubmissions=async()=>{try{// Try to load from localStorage first\nconst savedSubmissions=localStorage.getItem('turmerlink_submissions');if(savedSubmissions){const parsed=JSON.parse(savedSubmissions);setSubmissions(parsed);console.log('✅ Loaded submissions from localStorage');}else{// Use demo data if nothing saved\nsetSubmissions([{id:'SUB001',farmerId:'FARM001',farmerName:'రామయ్య',farmerPhone:'+91 9876543210',quantity:5,quality:'Grade A',price:8500,location:'నిజామాబాద్',submissionDate:'2024-01-20',status:'approved',governmentResponse:'2024-01-21',totalValue:42500,description:'ఉత్తమ నాణ్యత టర్మరిక్'},{id:'SUB002',farmerId:'FARM002',farmerName:'లక్ష్మయ్య',farmerPhone:'+91 9876543211',quantity:3,quality:'Export Grade',price:9200,location:'కరీంనగర్',submissionDate:'2024-01-19',status:'pending',governmentResponse:null,totalValue:27600,description:'ఎగుమతి నాణ్యత టర్మరిక్'},{id:'SUB003',farmerId:'FARM003',farmerName:'వెంకటేశ్వర్లు',farmerPhone:'+91 9876543212',quantity:7,quality:'Grade B',price:7800,location:'అదిలాబాద్',submissionDate:'2024-01-18',status:'rejected',governmentResponse:'2024-01-19',totalValue:54600,description:'సాధారణ నాణ్యత టర్మరిక్'}]);}}catch(error){console.error('❌ Failed to load submissions:',error);}};// No auto-refresh needed since we use localStorage\nconst addSubmission=async submission=>{const newSubmission=_objectSpread(_objectSpread({id:\"SUB\".concat(Date.now()),submissionDate:new Date().toISOString().split('T')[0]},submission),{},{status:'pending',governmentResponse:null});// Add to local state\nsetSubmissions(prev=>{const updated=[newSubmission,...prev];// Save to localStorage\nlocalStorage.setItem('turmerlink_submissions',JSON.stringify(updated));console.log('✅ Saved submission to localStorage');return updated;});// Try to sync to Supabase (optional, won't fail if it doesn't work)\ntry{await dbHelpers.createSubmission({farmer_id:submission.farmerId,farmer_name:submission.farmerName,farmer_phone:submission.farmerPhone,product:'Turmeric',quantity:submission.quantity,quality:submission.quality,price:submission.price,location:submission.location,status:'pending',total_value:submission.totalValue||submission.quantity*submission.price,description:submission.description,submission_date:newSubmission.submissionDate});console.log('✅ Synced to Supabase successfully!');}catch(error){console.log('ℹ️ Supabase sync failed, using localStorage only:',error.message);}return newSubmission;};const updateSubmissionStatus=async(submissionId,newStatus)=>{// Update local state\nsetSubmissions(prev=>{const updated=prev.map(sub=>sub.id===submissionId?_objectSpread(_objectSpread({},sub),{},{status:newStatus,governmentResponse:new Date().toISOString().split('T')[0]}):sub);// Save to localStorage\nlocalStorage.setItem('turmerlink_submissions',JSON.stringify(updated));return updated;});// Try to sync status update to Supabase (optional)\ntry{const govResponse=new Date().toISOString().split('T')[0];await dbHelpers.updateSubmissionStatus(submissionId,newStatus,govResponse);console.log(\"\\u2705 Status updated to \".concat(newStatus,\" in Supabase!\"));}catch(error){console.log('ℹ️ Supabase update failed, using localStorage only:',error.message);}};const getFarmerSubmissions=farmerId=>{return submissions.filter(sub=>sub.farmerId===farmerId);};const getAllSubmissions=()=>{return submissions;};const getPendingSubmissions=()=>{return submissions.filter(sub=>sub.status==='pending');};const getApprovedSubmissions=()=>{return submissions.filter(sub=>sub.status==='approved');};const getRejectedSubmissions=()=>{return submissions.filter(sub=>sub.status==='rejected');};const value={submissions,addSubmission,updateSubmissionStatus,getFarmerSubmissions,getAllSubmissions,getPendingSubmissions,getApprovedSubmissions,getRejectedSubmissions};return/*#__PURE__*/_jsx(SubmissionContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","dbHelpers","jsx","_jsx","SubmissionContext","useSubmissions","context","Error","SubmissionProvider","_ref","children","submissions","setSubmissions","loadSubmissions","savedSubmissions","localStorage","getItem","parsed","JSON","parse","console","log","id","farmerId","farmerName","farmerPhone","quantity","quality","price","location","submissionDate","status","governmentResponse","totalValue","description","error","addSubmission","submission","newSubmission","_objectSpread","concat","Date","now","toISOString","split","prev","updated","setItem","stringify","createSubmission","farmer_id","farmer_name","farmer_phone","product","total_value","submission_date","message","updateSubmissionStatus","submissionId","newStatus","map","sub","govResponse","getFarmerSubmissions","filter","getAllSubmissions","getPendingSubmissions","getApprovedSubmissions","getRejectedSubmissions","value","Provider"],"sources":["C:/Turmerik Bits/src/contexts/SubmissionContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { dbHelpers } from '../config/supabase';\r\n\r\nconst SubmissionContext = createContext();\r\n\r\nexport const useSubmissions = () => {\r\n  const context = useContext(SubmissionContext);\r\n  if (!context) {\r\n    throw new Error('useSubmissions must be used within a SubmissionProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SubmissionProvider = ({ children }) => {\r\n  const [submissions, setSubmissions] = useState([]);\r\n  \r\n  // Load submissions from localStorage on mount\r\n  useEffect(() => {\r\n    loadSubmissions();\r\n  }, []);\r\n  \r\n  const loadSubmissions = async () => {\r\n    try {\r\n      // Try to load from localStorage first\r\n      const savedSubmissions = localStorage.getItem('turmerlink_submissions');\r\n      \r\n      if (savedSubmissions) {\r\n        const parsed = JSON.parse(savedSubmissions);\r\n        setSubmissions(parsed);\r\n        console.log('✅ Loaded submissions from localStorage');\r\n      } else {\r\n        // Use demo data if nothing saved\r\n        setSubmissions([\r\n    {\r\n      id: 'SUB001',\r\n      farmerId: 'FARM001',\r\n      farmerName: 'రామయ్య',\r\n      farmerPhone: '+91 9876543210',\r\n      quantity: 5,\r\n      quality: 'Grade A',\r\n      price: 8500,\r\n      location: 'నిజామాబాద్',\r\n      submissionDate: '2024-01-20',\r\n      status: 'approved',\r\n      governmentResponse: '2024-01-21',\r\n      totalValue: 42500,\r\n      description: 'ఉత్తమ నాణ్యత టర్మరిక్'\r\n    },\r\n    {\r\n      id: 'SUB002',\r\n      farmerId: 'FARM002',\r\n      farmerName: 'లక్ష్మయ్య',\r\n      farmerPhone: '+91 9876543211',\r\n      quantity: 3,\r\n      quality: 'Export Grade',\r\n      price: 9200,\r\n      location: 'కరీంనగర్',\r\n      submissionDate: '2024-01-19',\r\n      status: 'pending',\r\n      governmentResponse: null,\r\n      totalValue: 27600,\r\n      description: 'ఎగుమతి నాణ్యత టర్మరిక్'\r\n    },\r\n    {\r\n      id: 'SUB003',\r\n      farmerId: 'FARM003',\r\n      farmerName: 'వెంకటేశ్వర్లు',\r\n      farmerPhone: '+91 9876543212',\r\n      quantity: 7,\r\n      quality: 'Grade B',\r\n      price: 7800,\r\n      location: 'అదిలాబాద్',\r\n      submissionDate: '2024-01-18',\r\n      status: 'rejected',\r\n      governmentResponse: '2024-01-19',\r\n      totalValue: 54600,\r\n      description: 'సాధారణ నాణ్యత టర్మరిక్'\r\n    }\r\n  ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Failed to load submissions:', error);\r\n    }\r\n  };\r\n  // No auto-refresh needed since we use localStorage\r\n\r\n  const addSubmission = async (submission) => {\r\n    const newSubmission = {\r\n      id: `SUB${Date.now()}`,\r\n      submissionDate: new Date().toISOString().split('T')[0],\r\n      ...submission,\r\n      status: 'pending',\r\n      governmentResponse: null\r\n    };\r\n    \r\n    // Add to local state\r\n    setSubmissions(prev => {\r\n      const updated = [newSubmission, ...prev];\r\n      // Save to localStorage\r\n      localStorage.setItem('turmerlink_submissions', JSON.stringify(updated));\r\n      console.log('✅ Saved submission to localStorage');\r\n      return updated;\r\n    });\r\n    \r\n    // Try to sync to Supabase (optional, won't fail if it doesn't work)\r\n    try {\r\n      await dbHelpers.createSubmission({\r\n        farmer_id: submission.farmerId,\r\n        farmer_name: submission.farmerName,\r\n        farmer_phone: submission.farmerPhone,\r\n        product: 'Turmeric',\r\n        quantity: submission.quantity,\r\n        quality: submission.quality,\r\n        price: submission.price,\r\n        location: submission.location,\r\n        status: 'pending',\r\n        total_value: submission.totalValue || (submission.quantity * submission.price),\r\n        description: submission.description,\r\n        submission_date: newSubmission.submissionDate\r\n      });\r\n      console.log('✅ Synced to Supabase successfully!');\r\n    } catch (error) {\r\n      console.log('ℹ️ Supabase sync failed, using localStorage only:', error.message);\r\n    }\r\n    \r\n    return newSubmission;\r\n  };\r\n\r\n  const updateSubmissionStatus = async (submissionId, newStatus) => {\r\n    // Update local state\r\n    setSubmissions(prev => {\r\n      const updated = prev.map(sub => \r\n        sub.id === submissionId \r\n          ? { \r\n              ...sub, \r\n              status: newStatus,\r\n              governmentResponse: new Date().toISOString().split('T')[0]\r\n            }\r\n          : sub\r\n      );\r\n      // Save to localStorage\r\n      localStorage.setItem('turmerlink_submissions', JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n    \r\n    // Try to sync status update to Supabase (optional)\r\n    try {\r\n      const govResponse = new Date().toISOString().split('T')[0];\r\n      await dbHelpers.updateSubmissionStatus(submissionId, newStatus, govResponse);\r\n      console.log(`✅ Status updated to ${newStatus} in Supabase!`);\r\n    } catch (error) {\r\n      console.log('ℹ️ Supabase update failed, using localStorage only:', error.message);\r\n    }\r\n  };\r\n\r\n  const getFarmerSubmissions = (farmerId) => {\r\n    return submissions.filter(sub => sub.farmerId === farmerId);\r\n  };\r\n\r\n  const getAllSubmissions = () => {\r\n    return submissions;\r\n  };\r\n\r\n  const getPendingSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'pending');\r\n  };\r\n\r\n  const getApprovedSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'approved');\r\n  };\r\n\r\n  const getRejectedSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'rejected');\r\n  };\r\n\r\n  const value = {\r\n    submissions,\r\n    addSubmission,\r\n    updateSubmissionStatus,\r\n    getFarmerSubmissions,\r\n    getAllSubmissions,\r\n    getPendingSubmissions,\r\n    getApprovedSubmissions,\r\n    getRejectedSubmissions\r\n  };\r\n\r\n  return (\r\n    <SubmissionContext.Provider value={value}>\r\n      {children}\r\n    </SubmissionContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}