{"ast":null,"code":"var _jsxFileName = \"C:\\\\Turmerik Bits\\\\src\\\\contexts\\\\SubmissionContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { dbHelpers } from '../config/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmissionContext = /*#__PURE__*/createContext();\nexport const useSubmissions = () => {\n  _s();\n  const context = useContext(SubmissionContext);\n  if (!context) {\n    throw new Error('useSubmissions must be used within a SubmissionProvider');\n  }\n  return context;\n};\n_s(useSubmissions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SubmissionProvider = ({\n  children\n}) => {\n  _s2();\n  const [submissions, setSubmissions] = useState([{\n    id: 'SUB001',\n    farmerId: 'FARM001',\n    farmerName: 'రామయ్య',\n    farmerPhone: '+91 9876543210',\n    quantity: 5,\n    quality: 'Grade A',\n    price: 8500,\n    location: 'నిజామాబాద్',\n    submissionDate: '2024-01-20',\n    status: 'approved',\n    governmentResponse: '2024-01-21',\n    totalValue: 42500,\n    description: 'ఉత్తమ నాణ్యత టర్మరిక్'\n  }, {\n    id: 'SUB002',\n    farmerId: 'FARM002',\n    farmerName: 'లక్ష్మయ్య',\n    farmerPhone: '+91 9876543211',\n    quantity: 3,\n    quality: 'Export Grade',\n    price: 9200,\n    location: 'కరీంనగర్',\n    submissionDate: '2024-01-19',\n    status: 'pending',\n    governmentResponse: null,\n    totalValue: 27600,\n    description: 'ఎగుమతి నాణ్యత టర్మరిక్'\n  }, {\n    id: 'SUB003',\n    farmerId: 'FARM003',\n    farmerName: 'వెంకటేశ్వర్లు',\n    farmerPhone: '+91 9876543212',\n    quantity: 7,\n    quality: 'Grade B',\n    price: 7800,\n    location: 'అదిలాబాద్',\n    submissionDate: '2024-01-18',\n    status: 'rejected',\n    governmentResponse: '2024-01-19',\n    totalValue: 54600,\n    description: 'సాధారణ నాణ్యత టర్మరిక్'\n  }]);\n  const addSubmission = async submission => {\n    const newSubmission = {\n      id: `SUB${Date.now()}`,\n      submissionDate: new Date().toISOString().split('T')[0],\n      ...submission,\n      status: 'pending',\n      governmentResponse: null\n    };\n\n    // Add to local state\n    setSubmissions(prev => [newSubmission, ...prev]);\n\n    // Sync to government portal via Supabase\n    try {\n      await dbHelpers.createSubmission({\n        farmer_id: submission.farmerId,\n        farmer_name: submission.farmerName,\n        farmer_phone: submission.farmerPhone,\n        product: 'Turmeric',\n        quantity: submission.quantity,\n        quality: submission.quality,\n        price: submission.price,\n        location: submission.location,\n        status: 'pending',\n        total_value: submission.totalValue || submission.quantity * submission.price,\n        description: submission.description,\n        submission_date: newSubmission.submissionDate\n      });\n      console.log('✅ Sales submitted to government portal successfully!');\n    } catch (error) {\n      console.error('❌ Failed to sync with government portal:', error);\n    }\n    return newSubmission;\n  };\n  const updateSubmissionStatus = (submissionId, newStatus) => {\n    setSubmissions(prev => prev.map(sub => sub.id === submissionId ? {\n      ...sub,\n      status: newStatus,\n      governmentResponse: new Date().toISOString().split('T')[0]\n    } : sub));\n  };\n  const getFarmerSubmissions = farmerId => {\n    return submissions.filter(sub => sub.farmerId === farmerId);\n  };\n  const getAllSubmissions = () => {\n    return submissions;\n  };\n  const getPendingSubmissions = () => {\n    return submissions.filter(sub => sub.status === 'pending');\n  };\n  const getApprovedSubmissions = () => {\n    return submissions.filter(sub => sub.status === 'approved');\n  };\n  const getRejectedSubmissions = () => {\n    return submissions.filter(sub => sub.status === 'rejected');\n  };\n  const value = {\n    submissions,\n    addSubmission,\n    updateSubmissionStatus,\n    getFarmerSubmissions,\n    getAllSubmissions,\n    getPendingSubmissions,\n    getApprovedSubmissions,\n    getRejectedSubmissions\n  };\n  return /*#__PURE__*/_jsxDEV(SubmissionContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s2(SubmissionProvider, \"ZPFwR4/Nre7P7P9q4nhrdK4TbOQ=\");\n_c = SubmissionProvider;\nvar _c;\n$RefreshReg$(_c, \"SubmissionProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","dbHelpers","jsxDEV","_jsxDEV","SubmissionContext","useSubmissions","_s","context","Error","SubmissionProvider","children","_s2","submissions","setSubmissions","id","farmerId","farmerName","farmerPhone","quantity","quality","price","location","submissionDate","status","governmentResponse","totalValue","description","addSubmission","submission","newSubmission","Date","now","toISOString","split","prev","createSubmission","farmer_id","farmer_name","farmer_phone","product","total_value","submission_date","console","log","error","updateSubmissionStatus","submissionId","newStatus","map","sub","getFarmerSubmissions","filter","getAllSubmissions","getPendingSubmissions","getApprovedSubmissions","getRejectedSubmissions","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Turmerik Bits/src/contexts/SubmissionContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { dbHelpers } from '../config/supabase';\r\n\r\nconst SubmissionContext = createContext();\r\n\r\nexport const useSubmissions = () => {\r\n  const context = useContext(SubmissionContext);\r\n  if (!context) {\r\n    throw new Error('useSubmissions must be used within a SubmissionProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SubmissionProvider = ({ children }) => {\r\n  const [submissions, setSubmissions] = useState([\r\n    {\r\n      id: 'SUB001',\r\n      farmerId: 'FARM001',\r\n      farmerName: 'రామయ్య',\r\n      farmerPhone: '+91 9876543210',\r\n      quantity: 5,\r\n      quality: 'Grade A',\r\n      price: 8500,\r\n      location: 'నిజామాబాద్',\r\n      submissionDate: '2024-01-20',\r\n      status: 'approved',\r\n      governmentResponse: '2024-01-21',\r\n      totalValue: 42500,\r\n      description: 'ఉత్తమ నాణ్యత టర్మరిక్'\r\n    },\r\n    {\r\n      id: 'SUB002',\r\n      farmerId: 'FARM002',\r\n      farmerName: 'లక్ష్మయ్య',\r\n      farmerPhone: '+91 9876543211',\r\n      quantity: 3,\r\n      quality: 'Export Grade',\r\n      price: 9200,\r\n      location: 'కరీంనగర్',\r\n      submissionDate: '2024-01-19',\r\n      status: 'pending',\r\n      governmentResponse: null,\r\n      totalValue: 27600,\r\n      description: 'ఎగుమతి నాణ్యత టర్మరిక్'\r\n    },\r\n    {\r\n      id: 'SUB003',\r\n      farmerId: 'FARM003',\r\n      farmerName: 'వెంకటేశ్వర్లు',\r\n      farmerPhone: '+91 9876543212',\r\n      quantity: 7,\r\n      quality: 'Grade B',\r\n      price: 7800,\r\n      location: 'అదిలాబాద్',\r\n      submissionDate: '2024-01-18',\r\n      status: 'rejected',\r\n      governmentResponse: '2024-01-19',\r\n      totalValue: 54600,\r\n      description: 'సాధారణ నాణ్యత టర్మరిక్'\r\n    }\r\n  ]);\r\n\r\n  const addSubmission = async (submission) => {\r\n    const newSubmission = {\r\n      id: `SUB${Date.now()}`,\r\n      submissionDate: new Date().toISOString().split('T')[0],\r\n      ...submission,\r\n      status: 'pending',\r\n      governmentResponse: null\r\n    };\r\n    \r\n    // Add to local state\r\n    setSubmissions(prev => [newSubmission, ...prev]);\r\n    \r\n    // Sync to government portal via Supabase\r\n    try {\r\n      await dbHelpers.createSubmission({\r\n        farmer_id: submission.farmerId,\r\n        farmer_name: submission.farmerName,\r\n        farmer_phone: submission.farmerPhone,\r\n        product: 'Turmeric',\r\n        quantity: submission.quantity,\r\n        quality: submission.quality,\r\n        price: submission.price,\r\n        location: submission.location,\r\n        status: 'pending',\r\n        total_value: submission.totalValue || (submission.quantity * submission.price),\r\n        description: submission.description,\r\n        submission_date: newSubmission.submissionDate\r\n      });\r\n      console.log('✅ Sales submitted to government portal successfully!');\r\n    } catch (error) {\r\n      console.error('❌ Failed to sync with government portal:', error);\r\n    }\r\n    \r\n    return newSubmission;\r\n  };\r\n\r\n  const updateSubmissionStatus = (submissionId, newStatus) => {\r\n    setSubmissions(prev => \r\n      prev.map(sub => \r\n        sub.id === submissionId \r\n          ? { \r\n              ...sub, \r\n              status: newStatus,\r\n              governmentResponse: new Date().toISOString().split('T')[0]\r\n            }\r\n          : sub\r\n      )\r\n    );\r\n  };\r\n\r\n  const getFarmerSubmissions = (farmerId) => {\r\n    return submissions.filter(sub => sub.farmerId === farmerId);\r\n  };\r\n\r\n  const getAllSubmissions = () => {\r\n    return submissions;\r\n  };\r\n\r\n  const getPendingSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'pending');\r\n  };\r\n\r\n  const getApprovedSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'approved');\r\n  };\r\n\r\n  const getRejectedSubmissions = () => {\r\n    return submissions.filter(sub => sub.status === 'rejected');\r\n  };\r\n\r\n  const value = {\r\n    submissions,\r\n    addSubmission,\r\n    updateSubmissionStatus,\r\n    getFarmerSubmissions,\r\n    getAllSubmissions,\r\n    getPendingSubmissions,\r\n    getApprovedSubmissions,\r\n    getRejectedSubmissions\r\n  };\r\n\r\n  return (\r\n    <SubmissionContext.Provider value={value}>\r\n      {children}\r\n    </SubmissionContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAASC,SAAS,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGR,UAAU,CAACK,iBAAiB,CAAC;EAC7C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yDAAyD,CAAC;EAC5E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,OAAO,MAAMI,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAC7C;IACEc,EAAE,EAAE,QAAQ;IACZC,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,gBAAgB;IAC7BC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,SAAS;IAClBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,YAAY;IACtBC,cAAc,EAAE,YAAY;IAC5BC,MAAM,EAAE,UAAU;IAClBC,kBAAkB,EAAE,YAAY;IAChCC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE;EACf,CAAC,EACD;IACEZ,EAAE,EAAE,QAAQ;IACZC,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,WAAW;IACvBC,WAAW,EAAE,gBAAgB;IAC7BC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,cAAc;IACvBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,UAAU;IACpBC,cAAc,EAAE,YAAY;IAC5BC,MAAM,EAAE,SAAS;IACjBC,kBAAkB,EAAE,IAAI;IACxBC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE;EACf,CAAC,EACD;IACEZ,EAAE,EAAE,QAAQ;IACZC,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,eAAe;IAC3BC,WAAW,EAAE,gBAAgB;IAC7BC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,SAAS;IAClBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE,WAAW;IACrBC,cAAc,EAAE,YAAY;IAC5BC,MAAM,EAAE,UAAU;IAClBC,kBAAkB,EAAE,YAAY;IAChCC,UAAU,EAAE,KAAK;IACjBC,WAAW,EAAE;EACf,CAAC,CACF,CAAC;EAEF,MAAMC,aAAa,GAAG,MAAOC,UAAU,IAAK;IAC1C,MAAMC,aAAa,GAAG;MACpBf,EAAE,EAAE,MAAMgB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACtBT,cAAc,EAAE,IAAIQ,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtD,GAAGL,UAAU;MACbL,MAAM,EAAE,SAAS;MACjBC,kBAAkB,EAAE;IACtB,CAAC;;IAED;IACAX,cAAc,CAACqB,IAAI,IAAI,CAACL,aAAa,EAAE,GAAGK,IAAI,CAAC,CAAC;;IAEhD;IACA,IAAI;MACF,MAAMjC,SAAS,CAACkC,gBAAgB,CAAC;QAC/BC,SAAS,EAAER,UAAU,CAACb,QAAQ;QAC9BsB,WAAW,EAAET,UAAU,CAACZ,UAAU;QAClCsB,YAAY,EAAEV,UAAU,CAACX,WAAW;QACpCsB,OAAO,EAAE,UAAU;QACnBrB,QAAQ,EAAEU,UAAU,CAACV,QAAQ;QAC7BC,OAAO,EAAES,UAAU,CAACT,OAAO;QAC3BC,KAAK,EAAEQ,UAAU,CAACR,KAAK;QACvBC,QAAQ,EAAEO,UAAU,CAACP,QAAQ;QAC7BE,MAAM,EAAE,SAAS;QACjBiB,WAAW,EAAEZ,UAAU,CAACH,UAAU,IAAKG,UAAU,CAACV,QAAQ,GAAGU,UAAU,CAACR,KAAM;QAC9EM,WAAW,EAAEE,UAAU,CAACF,WAAW;QACnCe,eAAe,EAAEZ,aAAa,CAACP;MACjC,CAAC,CAAC;MACFoB,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;IACrE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;IAEA,OAAOf,aAAa;EACtB,CAAC;EAED,MAAMgB,sBAAsB,GAAGA,CAACC,YAAY,EAAEC,SAAS,KAAK;IAC1DlC,cAAc,CAACqB,IAAI,IACjBA,IAAI,CAACc,GAAG,CAACC,GAAG,IACVA,GAAG,CAACnC,EAAE,KAAKgC,YAAY,GACnB;MACE,GAAGG,GAAG;MACN1B,MAAM,EAAEwB,SAAS;MACjBvB,kBAAkB,EAAE,IAAIM,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC,GACDgB,GACN,CACF,CAAC;EACH,CAAC;EAED,MAAMC,oBAAoB,GAAInC,QAAQ,IAAK;IACzC,OAAOH,WAAW,CAACuC,MAAM,CAACF,GAAG,IAAIA,GAAG,CAAClC,QAAQ,KAAKA,QAAQ,CAAC;EAC7D,CAAC;EAED,MAAMqC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAOxC,WAAW;EACpB,CAAC;EAED,MAAMyC,qBAAqB,GAAGA,CAAA,KAAM;IAClC,OAAOzC,WAAW,CAACuC,MAAM,CAACF,GAAG,IAAIA,GAAG,CAAC1B,MAAM,KAAK,SAAS,CAAC;EAC5D,CAAC;EAED,MAAM+B,sBAAsB,GAAGA,CAAA,KAAM;IACnC,OAAO1C,WAAW,CAACuC,MAAM,CAACF,GAAG,IAAIA,GAAG,CAAC1B,MAAM,KAAK,UAAU,CAAC;EAC7D,CAAC;EAED,MAAMgC,sBAAsB,GAAGA,CAAA,KAAM;IACnC,OAAO3C,WAAW,CAACuC,MAAM,CAACF,GAAG,IAAIA,GAAG,CAAC1B,MAAM,KAAK,UAAU,CAAC;EAC7D,CAAC;EAED,MAAMiC,KAAK,GAAG;IACZ5C,WAAW;IACXe,aAAa;IACbkB,sBAAsB;IACtBK,oBAAoB;IACpBE,iBAAiB;IACjBC,qBAAqB;IACrBC,sBAAsB;IACtBC;EACF,CAAC;EAED,oBACEpD,OAAA,CAACC,iBAAiB,CAACqD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA9C,QAAA,EACtCA;EAAQ;IAAAgD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;AAAClD,GAAA,CAvIWF,kBAAkB;AAAAqD,EAAA,GAAlBrD,kBAAkB;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}